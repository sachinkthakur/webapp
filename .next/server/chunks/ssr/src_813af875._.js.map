{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { User, LogIn, Building, Lock, Phone } from 'lucide-react';\nimport type { Employee, LoggedInUser } from '@/lib/types';\nimport { cn } from '@/lib/utils'; // Import cn for conditional classes\n\n// Schema for login - unified approach\nconst loginSchema = z.object({\n    identifier: z.string().min(1, 'Identifier is required'), // Can be 'admin' or phone number\n    passwordOrPin: z.string().min(1, 'Password or PIN is required'), // Holds either password or PIN\n});\n\ntype LoginFormData = z.infer<typeof loginSchema>;\n\n// Helper function to get employees from localStorage\nconst getStoredEmployees = (): Employee[] => {\n    if (typeof window === 'undefined') return [];\n    const stored = localStorage.getItem('employees');\n    try {\n        return stored ? JSON.parse(stored) : [];\n    } catch (e) {\n        console.error(\"Failed to parse employees from localStorage:\", e);\n        return [];\n    }\n};\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const form = useForm<LoginFormData>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      identifier: '',\n      passwordOrPin: '',\n    },\n     mode: 'onChange', // Validate on change to enable button correctly\n  });\n\n  // Watch the identifier field to adjust labels/placeholders\n  const watchedIdentifier = form.watch('identifier');\n  const isAdminLoginAttempt = watchedIdentifier.toLowerCase() === 'admin';\n\n  const onSubmit = (data: LoginFormData) => {\n    setIsSubmitting(true);\n    console.log('Login attempt:', data);\n\n    const identifier = data.identifier.trim(); // Trim whitespace\n    const passwordOrPin = data.passwordOrPin;\n\n    try {\n      let userToStore: LoggedInUser | null = null;\n\n      if (identifier.toLowerCase() === 'admin') {\n        // Admin Login Logic\n        // Use a secure way to store admin credentials in a real app\n        if (passwordOrPin === '1234') { // Use the password set previously\n            userToStore = { type: 'admin', userId: 'admin', userName: 'Admin' };\n        } else {\n            form.setError(\"passwordOrPin\", { type: \"manual\", message: \"Invalid admin password.\" });\n            toast({\n                variant: 'destructive',\n                title: 'Login Failed',\n                description: 'Invalid admin password.',\n            });\n             setIsSubmitting(false);\n            return;\n        }\n      } else {\n        // Employee Login Logic\n        // Validate if identifier looks like a 10-digit phone number before checking employees\n        if (!/^\\d{10}$/.test(identifier)) {\n            form.setError(\"identifier\", { type: \"manual\", message: \"Enter a valid 10-digit phone number.\" });\n             toast({\n                variant: 'destructive',\n                title: 'Login Failed',\n                description: 'Please enter a valid 10-digit phone number.',\n            });\n            setIsSubmitting(false);\n            return;\n        }\n\n        const employees = getStoredEmployees();\n        const foundEmployee = employees.find(emp => emp.phoneNumber === identifier);\n\n        if (foundEmployee && foundEmployee.pin === passwordOrPin) {\n            userToStore = {\n                type: 'employee',\n                userId: foundEmployee.phoneNumber, // Use phone number as userId\n                userName: foundEmployee.name, // Store employee name\n                employeeDetails: foundEmployee, // Store full employee details\n            };\n        } else {\n             if (!foundEmployee) {\n                 form.setError(\"identifier\", { type: \"manual\", message: \"Phone number not found.\" });\n             } else {\n                 form.setError(\"passwordOrPin\", { type: \"manual\", message: \"Incorrect PIN.\" });\n             }\n            toast({\n                variant: 'destructive',\n                title: 'Login Failed',\n                description: 'Invalid phone number or PIN.',\n            });\n            setIsSubmitting(false);\n            return;\n        }\n      }\n\n      // Store user info in localStorage for persistence\n      localStorage.setItem('loggedInUser', JSON.stringify(userToStore));\n\n      toast({\n        title: 'Login Successful',\n        description: `Welcome, ${userToStore.userName}!`,\n      });\n\n      // Redirect based on user type\n      const redirectPath = userToStore.type === 'admin' ? '/admin' : '/';\n      setTimeout(() => {\n        router.push(redirectPath);\n         // Don't set isSubmitting false here, page is navigating away\n      }, 500); // Short delay before redirect\n\n    } catch (error) {\n      console.error('Login error:', error);\n      toast({\n        variant: 'destructive',\n        title: 'Login Failed',\n        description: 'An unexpected error occurred. Please try again.',\n      });\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    // Use primary color from theme for background\n    <div\n      className=\"flex justify-center items-center min-h-[calc(100vh-4rem)] bg-primary p-4\"\n      // Background image notes:\n      // Cannot add external images directly here.\n      // To add a background image, you'd typically use CSS:\n      // style={{\n      //   backgroundImage: 'url(\"/path/to/your/india-truck-photo.jpg\")', // Ensure the image is in the public folder\n      //   backgroundSize: 'cover',\n      //   backgroundPosition: 'center',\n      // }}\n      // Or use Tailwind's background image utilities if configured.\n    >\n      {/* Card uses card background (white in light mode) */}\n      <Card className=\"w-full max-w-md shadow-xl rounded-lg bg-card\">\n        <CardHeader className=\"text-center\">\n          {/* Company Name uses primary color (from theme) */}\n          <div className=\"flex items-center justify-center gap-2 text-primary mb-2\">\n            <Building className=\"h-5 w-5\" />\n            <span className=\"font-medium\">E Wheels and Logistics</span>\n          </div>\n          {/* Title uses primary color */}\n          <CardTitle className=\"text-3xl font-bold text-primary\">FieldTrack Login</CardTitle>\n           {/* Description uses muted foreground color */}\n          <CardDescription>Enter your details to access FieldTrack.</CardDescription>\n        </CardHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)}>\n            <CardContent className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"identifier\"\n                render={({ field }) => (\n                  <FormItem>\n                    {/* Label uses foreground color, icon uses primary color */}\n                    <FormLabel className=\"flex items-center gap-1 font-semibold text-foreground\">\n                        {isAdminLoginAttempt ? <User className=\"h-4 w-4 text-primary\"/> : <Phone className=\"h-4 w-4 text-primary\" />}\n                         {isAdminLoginAttempt ? 'Admin ID' : 'Phone Number'}\n                    </FormLabel>\n                    <FormControl>\n                       {/* Input uses default input styling from theme */}\n                      <Input placeholder={isAdminLoginAttempt ? \"Enter 'admin'\" : \"Enter 10-digit phone number\"} {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"passwordOrPin\"\n                render={({ field }) => (\n                  <FormItem>\n                    {/* Label uses foreground color, icon uses primary color */}\n                    <FormLabel className=\"flex items-center gap-1 font-semibold text-foreground\"><Lock className=\"h-4 w-4 text-primary\" /> {isAdminLoginAttempt ? 'Password' : 'PIN'}</FormLabel>\n                    <FormControl>\n                       {/* Input uses default input styling from theme */}\n                      <Input type=\"password\" placeholder={isAdminLoginAttempt ? \"Enter admin password\" : \"Enter your 4-digit PIN\"} {...field} />\n                    </FormControl>\n                     <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n            </CardContent>\n            <CardFooter>\n               {/* Login button uses accent color from theme */}\n              <Button type=\"submit\" className=\"w-full bg-accent hover:bg-accent/90 text-accent-foreground font-bold\" disabled={isSubmitting || !form.formState.isValid}>\n                {isSubmitting ? (\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                ) : (\n                  <LogIn className=\"mr-2 h-4 w-4\" />\n                )}\n                {isSubmitting ? 'Logging In...' : 'Login'}\n              </Button>\n            </CardFooter>\n          </form>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}