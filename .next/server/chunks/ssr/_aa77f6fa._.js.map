{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/reverse-geo.ts"],"sourcesContent":["\n'use server'; // Mark this if used directly in Server Components/Actions, otherwise remove if only used client-side\n\nimport type { GeoLocation } from '@/lib/types';\n\n/**\n * Fetches a human-readable address for given latitude and longitude using the Nominatim API.\n *\n * @param latitude - The latitude of the location.\n * @param longitude - The longitude of the location.\n * @returns A promise that resolves to the display name (address) or null if an error occurs or no address is found.\n * @throws {Error} If the network request fails.\n */\nexport async function getAddressFromCoordinates(latitude: number, longitude: number): Promise<string | null> {\n  // IMPORTANT: Use a custom user agent for Nominatim as per their usage policy.\n  // Replace 'YourAppName/Version YourContactInfo' with your actual app details.\n  const userAgent = 'FieldTrack/1.0 (your-email@example.com)'; // BE SURE TO REPLACE THIS\n  const url = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${latitude}&lon=${longitude}`;\n\n  console.log(`Fetching address from: ${url}`); // Log the request URL\n\n  try {\n    const response = await fetch(url, {\n      headers: {\n        'User-Agent': userAgent,\n        'Accept': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`Nominatim API error: ${response.status} ${response.statusText}`, errorText);\n        // Don't throw here, return null to allow the app to continue\n        return `Error fetching address: ${response.statusText}`;\n    }\n\n    const data = await response.json();\n\n    console.log('Nominatim API response:', data); // Log the response data\n\n    if (data && data.display_name) {\n      return data.display_name;\n    } else {\n      console.warn('No address found for the given coordinates.');\n      return 'Address not found'; // Return a specific string if no address found\n    }\n  } catch (error: any) {\n    console.error('Error fetching address from Nominatim:', error);\n    // Return null or an error message string instead of throwing\n    // This prevents the entire location fetching process from failing\n    return 'Could not fetch address due to network error.';\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAaO,eAAe,uCAAuB,GAAvB,0BAA0B,QAAgB,EAAE,SAAiB;IACjF,8EAA8E;IAC9E,8EAA8E;IAC9E,MAAM,YAAY,2CAA2C,0BAA0B;IACvF,MAAM,MAAM,CAAC,8DAA8D,EAAE,SAAS,KAAK,EAAE,WAAW;IAExG,QAAQ,GAAG,CAAC,CAAC,uBAAuB,EAAE,KAAK,GAAG,sBAAsB;IAEpE,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,SAAS;gBACP,cAAc;gBACd,UAAU;YACZ;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,QAAQ,KAAK,CAAC,CAAC,qBAAqB,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,UAAU,EAAE,EAAE;YAChF,6DAA6D;YAC7D,OAAO,CAAC,wBAAwB,EAAE,SAAS,UAAU,EAAE;QAC3D;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,QAAQ,GAAG,CAAC,2BAA2B,OAAO,wBAAwB;QAEtE,IAAI,QAAQ,KAAK,YAAY,EAAE;YAC7B,OAAO,KAAK,YAAY;QAC1B,OAAO;YACL,QAAQ,IAAI,CAAC;YACb,OAAO,qBAAqB,+CAA+C;QAC7E;IACF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,0CAA0C;QACxD,6DAA6D;QAC7D,kEAAkE;QAClE,OAAO;IACT;AACF;;;IAvCsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}