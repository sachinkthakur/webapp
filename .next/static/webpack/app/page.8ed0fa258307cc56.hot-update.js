"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/geo-location.ts":
/*!**************************************!*\
  !*** ./src/services/geo-location.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GeolocationError: function() { return /* binding */ GeolocationError; },\n/* harmony export */   getAddressFromCoordinates: function() { return /* binding */ getAddressFromCoordinates; },\n/* harmony export */   getCurrentPosition: function() { return /* binding */ getCurrentPosition; }\n/* harmony export */ });\n/**\n * Custom Error class for Geolocation errors.\n */ class GeolocationError extends Error {\n    constructor(message, code){\n        super(message);\n        this.name = \"GeolocationError\";\n        this.code = code;\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, GeolocationError.prototype);\n    }\n}\n/**\n * Gets the current geographical coordinates of the device.\n * @returns A promise that resolves with the GeolocationCoordinates object or rejects with a GeolocationError.\n */ const getCurrentPosition = ()=>{\n    return new Promise((resolve, reject)=>{\n        if (!navigator.geolocation) {\n            reject(new GeolocationError(\"Geolocation is not supported by this browser.\", -1)); // Use a custom code for non-support\n            return;\n        }\n        navigator.geolocation.getCurrentPosition((position)=>{\n            resolve(position.coords);\n        }, (error)=>{\n            let message = \"\";\n            switch(error.code){\n                case error.PERMISSION_DENIED:\n                    message = \"User denied the request for Geolocation.\";\n                    break;\n                case error.POSITION_UNAVAILABLE:\n                    message = \"Location information is unavailable. Check GPS signal and network connection.\";\n                    break;\n                case error.TIMEOUT:\n                    message = \"Could not get location in time. Check GPS signal and network connection, then try again.\";\n                    break;\n                default:\n                    message = \"An unknown error occurred while retrieving location.\";\n                    break;\n            }\n            reject(new GeolocationError(\"\".concat(message, \" (Code: \").concat(error.code, \")\"), error.code));\n        }, {\n            enableHighAccuracy: true,\n            timeout: 20000,\n            maximumAge: 0\n        });\n    });\n};\n/**\n * Reverse geocodes latitude and longitude to get an address.\n * Uses the OpenStreetMap Nominatim API.\n * @param latitude The latitude coordinate.\n * @param longitude The longitude coordinate.\n * @returns A promise that resolves with the address string or rejects with an error.\n */ const getAddressFromCoordinates = async (latitude, longitude)=>{\n    console.log(\"[GeoService] Fetching address for Lat: \".concat(latitude, \", Lon: \").concat(longitude));\n    try {\n        // IMPORTANT: As per Nominatim's usage policy, a valid User-Agent is required.\n        // Replace 'YourAppName/1.0 (your-contact-email@example.com)' with your actual app name and a contact email.\n        const response = await fetch(\"https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=\".concat(latitude, \"&lon=\").concat(longitude), {\n            headers: {\n                \"User-Agent\": \"FieldTrackApp/1.0 (contact@ewheelslogistics.com)\" // Example User-Agent\n            }\n        });\n        if (!response.ok) {\n            const errorText = await response.text().catch(()=>\"Could not read error response body.\");\n            console.error(\"[GeoService] Nominatim API request failed. Status: \".concat(response.status, \". Response: \").concat(errorText));\n            throw new Error(\"Address lookup failed: Server responded with status \".concat(response.status, \".\"));\n        }\n        const data = await response.json();\n        if (data && data.display_name) {\n            console.log(\"[GeoService] Address found: \".concat(data.display_name));\n            return data.display_name;\n        } else {\n            console.warn(\"[GeoService] Nominatim response did not contain display_name or data was unexpected:\", data);\n            throw new Error(\"Address data not found in API response. The location might be in an area with no known address (e.g., open water).\");\n        }\n    } catch (error) {\n        console.error(\"[GeoService] Error in getAddressFromCoordinates:\", error);\n        if (error.message && (error.message.startsWith(\"Address lookup failed:\") || error.message.startsWith(\"Address data not found\"))) {\n            throw error; // Re-throw specific, informative errors\n        }\n        // Fallback for network errors or other unexpected issues\n        throw new Error(\"Could not retrieve address. Please check your network connection and try refreshing the location.\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/geo-location.ts\n"));

/***/ })

});